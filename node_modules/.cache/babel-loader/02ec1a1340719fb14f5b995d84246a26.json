{"ast":null,"code":"import $ from 'jquery';\nexport function netData(layer, rootName, dt) {\n  $(\".categories option\").each(function () {\n    if ($(this).val() !== \"default\") {\n      $(this).remove();\n    }\n  });\n  let netSet = {\n    node: [],\n    link: []\n  };\n  layer.forEach(obj => {\n    netSet.node.push({\n      id: obj.name,\n      group: +obj[dt]\n    });\n\n    if (obj.name !== rootName) {\n      netSet.link.push({\n        source: rootName,\n        target: obj.name,\n        value: +obj[dt]\n      });\n      $(\".categories\").append(\"<option value=\\\"\".concat(obj.name, \"\\\">\").concat(obj.name, \"</option>\"));\n    }\n  });\n  return netSet;\n}\nexport function radialData(data, rootName, dt) {\n  let radSet = [];\n  data.forEach(obj => {\n    if (obj.name !== rootName) {\n      radSet.push({\n        name: obj.name,\n        value: +obj[dt]\n      });\n    }\n  });\n  return radSet;\n}\nexport function barData(layer, rootName, dt) {\n  let barSet = [];\n  layer.forEach(obj => {\n    if (obj.name !== rootName) {\n      barSet.push({\n        name: obj.name,\n        value: +obj[dt]\n      });\n    }\n  });\n  return barSet;\n}","map":{"version":3,"sources":["/Users/Fwu/Documents/Acd.2019-2020/CS765/Design Challenge/DC3/Amazon-Categories-Network-React-App/src/ManageData.js"],"names":["$","netData","layer","rootName","dt","each","val","remove","netSet","node","link","forEach","obj","push","id","name","group","source","target","value","append","radialData","data","radSet","barData","barSet"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,EAAlC,EAAsC;AACzCJ,EAAAA,CAAC,CAAC,oBAAD,CAAD,CAAwBK,IAAxB,CAA6B,YAAW;AACpC,QAAIL,CAAC,CAAC,IAAD,CAAD,CAAQM,GAAR,OAAkB,SAAtB,EAAiC;AAC7BN,MAAAA,CAAC,CAAC,IAAD,CAAD,CAAQO,MAAR;AACH;AACJ,GAJD;AAKA,MAAIC,MAAM,GAAG;AACTC,IAAAA,IAAI,EAAC,EADI;AAETC,IAAAA,IAAI,EAAC;AAFI,GAAb;AAIAR,EAAAA,KAAK,CAACS,OAAN,CAAcC,GAAG,IAAI;AACjBJ,IAAAA,MAAM,CAACC,IAAP,CAAYI,IAAZ,CAAiB;AAACC,MAAAA,EAAE,EAAEF,GAAG,CAACG,IAAT;AAAeC,MAAAA,KAAK,EAAE,CAACJ,GAAG,CAACR,EAAD;AAA1B,KAAjB;;AACA,QAAIQ,GAAG,CAACG,IAAJ,KAAaZ,QAAjB,EAA2B;AACvBK,MAAAA,MAAM,CAACE,IAAP,CAAYG,IAAZ,CAAiB;AAACI,QAAAA,MAAM,EAAEd,QAAT;AAAmBe,QAAAA,MAAM,EAAEN,GAAG,CAACG,IAA/B;AAAqCI,QAAAA,KAAK,EAAE,CAACP,GAAG,CAACR,EAAD;AAAhD,OAAjB;AACAJ,MAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBoB,MAAjB,2BACsBR,GAAG,CAACG,IAD1B,gBACmCH,GAAG,CAACG,IADvC;AAGH;AACJ,GARD;AASA,SAAOP,MAAP;AACH;AACD,OAAO,SAASa,UAAT,CAAoBC,IAApB,EAA0BnB,QAA1B,EAAoCC,EAApC,EAAwC;AAC3C,MAAImB,MAAM,GAAG,EAAb;AACAD,EAAAA,IAAI,CAACX,OAAL,CAAaC,GAAG,IAAI;AAChB,QAAIA,GAAG,CAACG,IAAJ,KAAaZ,QAAjB,EAA2B;AACvBoB,MAAAA,MAAM,CAACV,IAAP,CAAY;AAACE,QAAAA,IAAI,EAAEH,GAAG,CAACG,IAAX;AAAiBI,QAAAA,KAAK,EAAE,CAACP,GAAG,CAACR,EAAD;AAA5B,OAAZ;AACH;AACJ,GAJD;AAKA,SAAOmB,MAAP;AACH;AACD,OAAO,SAASC,OAAT,CAAiBtB,KAAjB,EAAwBC,QAAxB,EAAkCC,EAAlC,EAAsC;AACzC,MAAIqB,MAAM,GAAG,EAAb;AACAvB,EAAAA,KAAK,CAACS,OAAN,CAAcC,GAAG,IAAI;AACjB,QAAIA,GAAG,CAACG,IAAJ,KAAaZ,QAAjB,EAA2B;AACvBsB,MAAAA,MAAM,CAACZ,IAAP,CAAY;AAACE,QAAAA,IAAI,EAAEH,GAAG,CAACG,IAAX;AAAiBI,QAAAA,KAAK,EAAE,CAACP,GAAG,CAACR,EAAD;AAA5B,OAAZ;AACH;AACJ,GAJD;AAKA,SAAOqB,MAAP;AACH","sourcesContent":["import $ from 'jquery';\n\nexport function netData(layer, rootName, dt) {\n    $(\".categories option\").each(function() {\n        if ($(this).val() !== \"default\") {\n            $(this).remove();\n        }\n    });\n    let netSet = {\n        node:[],\n        link:[]\n    };\n    layer.forEach(obj => {\n        netSet.node.push({id: obj.name, group: +obj[dt]});\n        if (obj.name !== rootName) {\n            netSet.link.push({source: rootName, target: obj.name, value: +obj[dt]})\n            $(\".categories\").append(\n                `<option value=\"${obj.name}\">${obj.name}</option>`\n            );\n        }\n    });\n    return netSet;\n}\nexport function radialData(data, rootName, dt) {\n    let radSet = [];\n    data.forEach(obj => {\n        if (obj.name !== rootName) {\n            radSet.push({name: obj.name, value: +obj[dt]});\n        }\n    });\n    return radSet;\n}\nexport function barData(layer, rootName, dt) {\n    let barSet = [];\n    layer.forEach(obj => {\n        if (obj.name !== rootName) {\n            barSet.push({name: obj.name, value: +obj[dt]});\n        }\n    });\n    return barSet;\n}"]},"metadata":{},"sourceType":"module"}