{"ast":null,"code":"import * as d3 from 'd3';\nimport $ from \"jquery\";\nconst width = window.innerWidth;\nconst height = window.innerHeight;\nexport function drawNet(nodeSet, linkSet, currLayer, data, rootName, dt) {\n  restart();\n  let simulation = d3.forceSimulation(nodeSet).force(\"link\", d3.forceLink(linkSet).id(d => d.id).strength(0)).force(\"link\", d3.forceLink(linkSet).distance(d => {\n    let r = String(d.value);\n\n    if (d.value >= 1000) {\n      r = String(d.value).substring(0, 3);\n    }\n\n    return parseInt(r) * 2;\n  })).force(\"charge\", d3.forceManyBody().strength(-200)).force(\"center\", d3.forceCenter(width / 2, height / 2));\n  let svg = d3.select(\"svg\").attr(\"viewBox\", [0, 0, width, height]);\n  let link = svg.append(\"g\").classed(\"links\", true).attr(\"stroke\", \"#999\").attr(\"stroke-opacity\", 0.6).selectAll(\"line\").data(linkSet).join(\"line\").attr(\"stroke-width\", 1.5);\n  let node = svg.append(\"g\").classed(\"nodes\", true).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 1.5).selectAll(\"circle\").data(nodeSet).join(\"circle\").attr(\"r\", d => {\n    if (d.id === rootName) {\n      return 5;\n    }\n\n    if (d.group === 0) {\n      return 3;\n    } else {\n      let r = String(d.group);\n\n      if (d.group >= 1000) {\n        r = String(d.group).substring(0, 3);\n      }\n\n      return Math.sqrt(parseInt(r)) * 4;\n    }\n  }).attr(\"fill\", \"#2E86C1\").on(\"mouseover\", mouseover).on(\"click\", function () {\n    $(\".infoBox\").remove();\n    d3.select(this).classed(\"clicked\", !d3.select(this).classed(\"clicked\"));\n    let clickedData = currLayer.filter(obj => obj.name === d3.select(this).select(\"title\").text());\n    info(d3.select(this).classed(\"clicked\"), clickedData[0]);\n    let layer = data.filter(obj => obj[\"parent\"] === clickedData[0][\"id\"] || obj[\"name\"] === clickedData[0][\"name\"]);\n    console.log(layer);\n    let subTreeSet = netData(layer, clickedData[0][\"name\"], dt);\n    console.log(subTreeSet);\n    let nodeSet = subTreeSet.node.map(d => Object.create(d)),\n        linkSet = subTreeSet.link.map(d => Object.create(d));\n    $(\".links\").remove();\n    $(\".nodes\").remove();\n    console.log(\"removed, ready to draw\");\n    drawNet(nodeSet, linkSet, layer, data, clickedData[0][\"name\"], dt);\n  }).on(\"mouseout\", mouseout).call(drag(simulation));\n  node.append(\"title\").text(d => d.id);\n  simulation.on(\"tick\", () => {\n    link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n    node.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n  });\n}\nexport function drawRadial(originalData, data, currLayer) {\n  $(\".bar\").remove();\n  $(\".links\").remove();\n  $(\".nodes\").remove();\n  let barHeight = height / 2 - 40;\n  let color = d3.scaleOrdinal().range([\"#8dd3c7\", \"#ffffb3\", \"#bebada\", \"#fb8072\", \"#80b1d3\", \"#fdb462\", \"#b3de69\", \"#fccde5\", \"#d9d9d9\", \"#bc80bd\", \"#ccebc5\", \"#ffed6f\"]);\n  let svg = d3.select(\"svg\").attr(\"viewBox\", [0, 0, width, height]).append(\"g\").classed(\"radial\", true).attr(\"transform\", \"translate(\" + width / 2 + \", \" + height / 2 + \")\");\n  data.sort((a, b) => b.value - a.value);\n  let extent = d3.extent(data, d => d.value);\n  let barScale = d3.scaleLinear().domain(extent).range([0, barHeight]);\n  let keys = data.map(d => d.name);\n  let numBars = keys.length;\n  let x = d3.scaleLinear().domain(extent).range([0, -barHeight]);\n  let xAxis = d3.axisLeft().scale(x).ticks(7);\n  svg.selectAll(\"circle\").data(x.ticks(7)).enter().append(\"circle\").attr(\"r\", d => barScale(d)).style(\"fill\", \"none\").style(\"stroke\", \"black\").style(\"stroke-dasharray\", \"2.2\").style(\"stroke-width\", \".5px\");\n  let arc = d3.arc().startAngle((d, i) => i * 2 * Math.PI / numBars).endAngle((d, i) => (i + 1) * 2 * Math.PI / numBars).innerRadius(0);\n  let segments = svg.selectAll(\"path\").data(data).enter().append(\"path\").each(d => d.outerRadius = 0).attr(\"fill\", d => color(d.name)).attr(\"d\", arc).on(\"mouseover\", mouseover).on(\"click\", function () {\n    $(\".infoBox\").remove();\n    d3.select(this).classed(\"clicked\", !d3.select(this).classed(\"clicked\"));\n    let clickedData = currLayer.filter(obj => obj.name === d3.select(this).select(\"title\").text());\n    info(d3.select(this).classed(\"clicked\"), clickedData[0]);\n    let layer = originalData.filter(obj => obj[\"parent\"] === clickedData[0][\"id\"] || obj[\"name\"] === clickedData[0][\"name\"]);\n    let subTreeSet = radialData(layer, clickedData[0][\"name\"]);\n    $(\".radial\").remove();\n    drawRadial(originalData, subTreeSet, layer);\n  }).on(\"mouseout\", mouseout);\n  segments.transition().ease(d3.easeElastic).duration(1000).delay((d, i) => (25 - i) * 100).attrTween(\"d\", (d, idx) => {\n    let i = d3.interpolate(d.outerRadius, barScale(+d.value));\n    return t => {\n      d.outerRadius = i(t);\n      return arc(d, idx);\n    };\n  });\n  svg.append(\"circle\").attr(\"r\", barHeight).classed(\"outer\", true).style(\"fill\", \"none\").style(\"stroke\", \"black\").style(\"stroke-width\", \"1.5px\");\n  svg.selectAll(\"line\").data(keys).enter().append(\"line\").attr(\"y2\", -barHeight).style(\"stroke\", \"black\").style(\"stroke-width\", \".5px\").attr(\"transform\", (d, i) => \"rotate(\" + i * 360 / numBars + \")\");\n  svg.append(\"g\").classed(\"xAxis\", true).call(xAxis);\n  segments.append(\"title\").text(d => d.name);\n}\nexport function drawBar(originalData, data, currLayer) {\n  $(\".radial\").remove();\n  $(\".links\").remove();\n  $(\".nodes\").remove();\n  let barHeight = height / 2;\n  let xWidth = width;\n  let svg = d3.select(\"svg\").attr(\"viewBox\", [0, 0, width, height]).append(\"g\").classed(\"bar\", true).attr(\"transform\", \"translate(\" + 200 + \", \" + height / 2 + \"), scale(0.8)\");\n  let extent = d3.extent(data, d => d.value);\n  let xScale = d3.scaleBand().domain(data.map(obj => obj.name)).rangeRound([0, xWidth]);\n  let yScale = d3.scaleLinear().domain(extent).range([barHeight, -10]);\n  svg.append(\"g\").attr(\"transform\", \"translate(0, \" + barHeight + \")\").classed(\"xAxis\", true).call(d3.axisBottom(xScale)).selectAll(\"text\").attr(\"transform\", \"translate(-20, 20) rotate(-45)\");\n  svg.append(\"g\").classed(\"yAxis\", true).call(d3.axisLeft(yScale));\n  svg.selectAll(\"rect\").data(data).enter().append(\"rect\").attr(\"x\", d => xScale(d.name)).attr(\"y\", yScale(0)).attr(\"height\", 0).attr(\"width\", xScale.bandwidth()).attr(\"fill\", \"#2E86C1\").on(\"mouseover\", mouseover).on(\"click\", function () {\n    $(\".infoBox\").remove();\n    d3.select(this).classed(\"clicked\", !d3.select(this).classed(\"clicked\"));\n    let clickedData = currLayer.filter(obj => obj.name === d3.select(this).select(\"title\").text());\n    info(d3.select(this).classed(\"clicked\"), clickedData[0]);\n    let layer = originalData.filter(obj => obj[\"parent\"] === clickedData[0][\"id\"] || obj[\"name\"] === clickedData[0][\"name\"]);\n    let subTreeSet = barData(layer, clickedData[0][\"name\"]);\n    $(\".bar\").remove();\n    drawBar(originalData, subTreeSet, layer);\n  }).on(\"mouseout\", mouseout);\n  svg.selectAll(\"rect\").transition().duration(800).attr(\"y\", d => yScale(d.value)).attr(\"height\", d => yScale(0) - yScale(d.value)).delay((d, i) => i * 100);\n  svg.selectAll(\"rect\").append(\"title\").text(d => d.name);\n}\n\nfunction info(clicked, data) {\n  if (clicked) {\n    $(\"#root\").append(\"<div class='infoBox'>\" + \"<h2>Category Information</h2>\" + \"<text>Category Name: \" + data.name + \"</text>\" + \"<text>Category id: \" + data.id + \"</text>\" + \"<text>Number of Products: \" + data.productCount + \"</text>\" + \"<text>Number of Subtrees: \" + data.numChildren + \"</text>\" + \"<text>Number of Products in Subtree: \" + data.subtreeProductCount + \"</text>\" + \"</div>\");\n  } else {\n    $(\".infoBox\").remove();\n  }\n}\n\nfunction netData(layer, rootName, dt) {\n  let netSet = {\n    node: [],\n    link: []\n  };\n  layer.forEach(obj => {\n    netSet.node.push({\n      id: obj.name,\n      group: +obj[dt]\n    });\n\n    if (obj.name !== rootName) {\n      netSet.link.push({\n        source: rootName,\n        target: obj.name,\n        value: +obj[dt]\n      });\n    }\n  });\n  return netSet;\n}\n\nfunction radialData(data, rootName) {\n  let radSet = [];\n  data.forEach(obj => {\n    if (obj.name !== rootName) {\n      radSet.push({\n        name: obj.name,\n        value: +obj[\"numChildren\"]\n      });\n    }\n  });\n  return radSet;\n}\n\nfunction barData(layer, rootName) {\n  let barSet = [];\n  layer.forEach(obj => {\n    if (obj.name !== rootName) {\n      barSet.push({\n        name: obj.name,\n        value: +obj[\"numChildren\"]\n      });\n    }\n  });\n  return barSet;\n}\n\nfunction restart() {\n  $(\".links\").remove();\n  $(\".nodes\").remove();\n  $(\".radial\").remove();\n  $(\".bar\").remove();\n}\n\nfunction mouseover() {\n  d3.select(this).transition().duration(700).attr(\"fill\", \"#AF7AC5\");\n}\n\nfunction mouseout() {\n  d3.select(this).transition().duration(700).attr(\"fill\", \"#2E86C1\");\n}\n\nfunction drag(simulation) {\n  function dragStart(d) {\n    if (!d3.event.active) {\n      simulation.alphaTarget(0.3).restart();\n    }\n\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n\n  function dragged(d) {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  }\n\n  function dragEnd(d) {\n    if (!d3.event.active) {\n      simulation.alphaTarget(0);\n    }\n\n    d.fx = null;\n    d.fy = null;\n  }\n\n  return d3.drag().on(\"start\", dragStart).on(\"drag\", dragged).on(\"end\", dragEnd);\n}","map":{"version":3,"sources":["/Users/Fwu/Documents/Acd.2019-2020/CS765/Design Challenge/DC3/Amazon-Categories-Network-React-App/src/Helper.js"],"names":["d3","$","width","window","innerWidth","height","innerHeight","drawNet","nodeSet","linkSet","currLayer","data","rootName","dt","restart","simulation","forceSimulation","force","forceLink","id","d","strength","distance","r","String","value","substring","parseInt","forceManyBody","forceCenter","svg","select","attr","link","append","classed","selectAll","join","node","group","Math","sqrt","on","mouseover","remove","clickedData","filter","obj","name","text","info","layer","console","log","subTreeSet","netData","map","Object","create","mouseout","call","drag","source","x","y","target","drawRadial","originalData","barHeight","color","scaleOrdinal","range","sort","a","b","extent","barScale","scaleLinear","domain","keys","numBars","length","xAxis","axisLeft","scale","ticks","enter","style","arc","startAngle","i","PI","endAngle","innerRadius","segments","each","outerRadius","radialData","transition","ease","easeElastic","duration","delay","attrTween","idx","interpolate","t","drawBar","xWidth","xScale","scaleBand","rangeRound","yScale","axisBottom","bandwidth","barData","clicked","productCount","numChildren","subtreeProductCount","netSet","forEach","push","radSet","barSet","dragStart","event","active","alphaTarget","fx","fy","dragged","dragEnd"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nimport $ from \"jquery\";\n\nconst width = window.innerWidth;\nconst height = window.innerHeight;\n\nexport function drawNet(nodeSet, linkSet, currLayer, data, rootName, dt) {\n    restart();\n    let simulation = d3.forceSimulation(nodeSet)\n        .force(\"link\", d3.forceLink(linkSet).id(d => d.id).strength(0))\n        .force(\"link\", d3.forceLink(linkSet).distance(d => {\n            let r = String(d.value);\n            if (d.value >= 1000) {\n                r = String(d.value).substring(0, 3);\n            }\n            return parseInt(r) * 2;\n        }))\n        .force(\"charge\", d3.forceManyBody().strength(-200))\n        .force(\"center\", d3.forceCenter(width / 2, height / 2));\n    let svg = d3.select(\"svg\")\n        .attr(\"viewBox\", [0, 0, width, height]);\n    let link = svg.append(\"g\")\n        .classed(\"links\", true)\n        .attr(\"stroke\", \"#999\")\n        .attr(\"stroke-opacity\", 0.6)\n        .selectAll(\"line\")\n        .data(linkSet)\n        .join(\"line\")\n        .attr(\"stroke-width\", 1.5);\n    let node = svg.append(\"g\")\n        .classed(\"nodes\", true)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"stroke-width\", 1.5)\n        .selectAll(\"circle\")\n        .data(nodeSet)\n        .join(\"circle\")\n        .attr(\"r\", d => {\n            if (d.id === rootName) {\n                return 5;\n            }\n            if (d.group === 0) {\n                return 3;\n            } else {\n                let r = String(d.group);\n                if (d.group >= 1000) {\n                    r = String(d.group).substring(0, 3);\n                }\n                return Math.sqrt(parseInt(r)) * 4;\n            }\n        })\n        .attr(\"fill\", \"#2E86C1\")\n        .on(\"mouseover\", mouseover)\n        .on(\"click\", function() {\n            $(\".infoBox\").remove();\n            d3.select(this)\n                .classed(\"clicked\", !d3.select(this).classed(\"clicked\"));\n            let clickedData = currLayer.filter(obj => obj.name === d3.select(this).select(\"title\").text());\n            info(d3.select(this).classed(\"clicked\"), clickedData[0]);\n            let layer = data.filter(obj => obj[\"parent\"] === clickedData[0][\"id\"] || obj[\"name\"] === clickedData[0][\"name\"]);\n            console.log(layer);\n            let subTreeSet = netData(layer, clickedData[0][\"name\"], dt);\n            console.log(subTreeSet);\n            let nodeSet = subTreeSet.node.map(d => Object.create(d)),\n                linkSet = subTreeSet.link.map(d => Object.create(d));\n            $(\".links\").remove();\n            $(\".nodes\").remove();\n            console.log(\"removed, ready to draw\");\n            drawNet(nodeSet, linkSet, layer, data, clickedData[0][\"name\"], dt);\n        })\n        .on(\"mouseout\", mouseout)\n        .call(drag(simulation));\n    node.append(\"title\")\n        .text(d => d.id);\n    simulation.on(\"tick\", () => {\n        link\n            .attr(\"x1\", d => d.source.x)\n            .attr(\"y1\", d => d.source.y)\n            .attr(\"x2\", d => d.target.x)\n            .attr(\"y2\", d => d.target.y);\n        node\n            .attr(\"cx\", d => d.x)\n            .attr(\"cy\", d => d.y);\n    });\n}\nexport function drawRadial(originalData, data, currLayer) {\n    $(\".bar\").remove();\n    $(\".links\").remove();\n    $(\".nodes\").remove();\n    let barHeight = height / 2 - 40;\n    let color = d3.scaleOrdinal()\n        .range([\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"]);\n    let svg = d3.select(\"svg\")\n        .attr(\"viewBox\", [0, 0, width, height])\n        .append(\"g\")\n        .classed(\"radial\", true)\n        .attr(\"transform\", \"translate(\" + width / 2 + \", \" + height / 2 + \")\");\n    data.sort((a, b) => b.value - a.value);\n    let extent = d3.extent(data, d => d.value);\n    let barScale = d3.scaleLinear()\n        .domain(extent)\n        .range([0, barHeight]);\n    let keys = data.map(d => d.name);\n    let numBars = keys.length;\n    let x = d3.scaleLinear()\n        .domain(extent)\n        .range([0, -barHeight]);\n    let xAxis = d3.axisLeft()\n        .scale(x)\n        .ticks(7);\n    svg.selectAll(\"circle\")\n        .data(x.ticks(7))\n        .enter()\n        .append(\"circle\")\n        .attr(\"r\", d => barScale(d))\n        .style(\"fill\", \"none\")\n        .style(\"stroke\", \"black\")\n        .style(\"stroke-dasharray\", \"2.2\")\n        .style(\"stroke-width\", \".5px\");\n    let arc = d3.arc()\n        .startAngle((d, i) => (i * 2 * Math.PI) / numBars)\n        .endAngle((d, i) => ((i + 1) * 2 * Math.PI) / numBars)\n        .innerRadius(0);\n    let segments = svg.selectAll(\"path\")\n        .data(data)\n        .enter()\n        .append(\"path\")\n        .each(d => d.outerRadius = 0)\n        .attr(\"fill\", d => color(d.name))\n        .attr(\"d\", arc)\n        .on(\"mouseover\", mouseover)\n        .on(\"click\", function() {\n            $(\".infoBox\").remove();\n            d3.select(this)\n                .classed(\"clicked\", !d3.select(this).classed(\"clicked\"));\n            let clickedData = currLayer.filter(obj => obj.name === d3.select(this).select(\"title\").text());\n            info(d3.select(this).classed(\"clicked\"), clickedData[0]);\n            let layer = originalData.filter(obj => obj[\"parent\"] === clickedData[0][\"id\"] || obj[\"name\"] === clickedData[0][\"name\"]);\n            let subTreeSet = radialData(layer, clickedData[0][\"name\"]);\n            $(\".radial\").remove();\n            drawRadial(originalData, subTreeSet, layer);\n        })\n        .on(\"mouseout\", mouseout);\n    segments.transition()\n        .ease(d3.easeElastic)\n        .duration(1000)\n        .delay((d, i) => (25 - i) * 100)\n        .attrTween(\"d\", (d, idx) => {\n            let i = d3.interpolate(d.outerRadius, barScale(+d.value));\n            return t => {\n                d.outerRadius = i(t);\n                return arc(d, idx);\n            };\n        });\n    svg.append(\"circle\")\n        .attr(\"r\", barHeight)\n        .classed(\"outer\", true)\n        .style(\"fill\", \"none\")\n        .style(\"stroke\", \"black\")\n        .style(\"stroke-width\", \"1.5px\");\n    svg.selectAll(\"line\")\n        .data(keys)\n        .enter()\n        .append(\"line\")\n        .attr(\"y2\", -barHeight)\n        .style(\"stroke\", \"black\")\n        .style(\"stroke-width\", \".5px\")\n        .attr(\"transform\", (d, i) => \"rotate(\" + (i * 360 / numBars) + \")\");\n    svg.append(\"g\")\n        .classed(\"xAxis\", true)\n        .call(xAxis);\n    segments.append(\"title\")\n        .text(d => d.name);\n}\nexport function drawBar(originalData, data, currLayer) {\n    $(\".radial\").remove();\n    $(\".links\").remove();\n    $(\".nodes\").remove();\n    let barHeight = height / 2;\n    let xWidth = width;\n    let svg = d3.select(\"svg\")\n        .attr(\"viewBox\", [0, 0, width, height])\n        .append(\"g\")\n        .classed(\"bar\", true)\n        .attr(\"transform\", \"translate(\" + 200 + \", \" + height / 2 + \"), scale(0.8)\");\n    let extent = d3.extent(data, d => d.value);\n    let xScale = d3.scaleBand()\n        .domain(data.map(obj => obj.name))\n        .rangeRound([0, xWidth]);\n    let yScale = d3.scaleLinear()\n        .domain(extent)\n        .range([barHeight, -10]);\n    svg.append(\"g\")\n        .attr(\"transform\", \"translate(0, \" + barHeight + \")\")\n        .classed(\"xAxis\", true)\n        .call(d3.axisBottom(xScale))\n        .selectAll(\"text\")\n        .attr(\"transform\", \"translate(-20, 20) rotate(-45)\");\n    svg.append(\"g\")\n        .classed(\"yAxis\", true)\n        .call(d3.axisLeft(yScale));\n    svg.selectAll(\"rect\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", d => xScale(d.name))\n        .attr(\"y\", yScale(0))\n        .attr(\"height\", 0)\n        .attr(\"width\", xScale.bandwidth())\n        .attr(\"fill\", \"#2E86C1\")\n        .on(\"mouseover\", mouseover)\n        .on(\"click\", function() {\n            $(\".infoBox\").remove();\n            d3.select(this)\n                .classed(\"clicked\", !d3.select(this).classed(\"clicked\"));\n            let clickedData = currLayer.filter(obj => obj.name === d3.select(this).select(\"title\").text());\n            info(d3.select(this).classed(\"clicked\"), clickedData[0]);\n            let layer = originalData.filter(obj => obj[\"parent\"] === clickedData[0][\"id\"] || obj[\"name\"] === clickedData[0][\"name\"]);\n            let subTreeSet = barData(layer, clickedData[0][\"name\"]);\n            $(\".bar\").remove();\n            drawBar(originalData, subTreeSet, layer);\n        })\n        .on(\"mouseout\", mouseout);\n    svg.selectAll(\"rect\")\n        .transition()\n        .duration(800)\n        .attr(\"y\", d => yScale(d.value))\n        .attr(\"height\", d => yScale(0) - yScale(d.value))\n        .delay((d, i) => i * 100);\n    svg.selectAll(\"rect\")\n        .append(\"title\")\n        .text(d => d.name);\n}\nfunction info(clicked, data) {\n    if (clicked) {\n        $(\"#root\").append(\n            \"<div class='infoBox'>\" +\n            \"<h2>Category Information</h2>\" +\n            \"<text>Category Name: \" + data.name + \"</text>\" +\n            \"<text>Category id: \" + data.id + \"</text>\" +\n            \"<text>Number of Products: \" + data.productCount + \"</text>\" +\n            \"<text>Number of Subtrees: \" + data.numChildren + \"</text>\" +\n            \"<text>Number of Products in Subtree: \" + data.subtreeProductCount + \"</text>\" +\n            \"</div>\");\n    } else {\n        $(\".infoBox\").remove();\n    }\n}\nfunction netData(layer, rootName, dt) {\n    let netSet = {\n        node:[],\n        link:[]\n    };\n    layer.forEach(obj => {\n        netSet.node.push({id: obj.name, group: +obj[dt]});\n        if (obj.name !== rootName) {\n            netSet.link.push({source: rootName, target: obj.name, value: +obj[dt]})\n        }\n    });\n    return netSet;\n}\nfunction radialData(data, rootName) {\n    let radSet = [];\n    data.forEach(obj => {\n        if (obj.name !== rootName) {\n            radSet.push({name: obj.name, value: +obj[\"numChildren\"]});\n        }\n    });\n    return radSet;\n}\nfunction barData(layer, rootName) {\n    let barSet = [];\n    layer.forEach(obj => {\n        if (obj.name !== rootName) {\n            barSet.push({name: obj.name, value: +obj[\"numChildren\"]});\n        }\n    });\n    return barSet;\n}\nfunction restart() {\n    $(\".links\").remove();\n    $(\".nodes\").remove();\n    $(\".radial\").remove();\n    $(\".bar\").remove();\n}\nfunction mouseover() {\n    d3.select(this)\n        .transition()\n        .duration(700)\n        .attr(\"fill\", \"#AF7AC5\");\n}\nfunction mouseout() {\n    d3.select(this)\n        .transition()\n        .duration(700)\n        .attr(\"fill\", \"#2E86C1\");\n}\nfunction drag(simulation) {\n    function dragStart(d) {\n        if (!d3.event.active) {\n            simulation.alphaTarget(0.3).restart();\n        }\n        d.fx = d.x;\n        d.fy = d.y;\n    }\n    function dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n    }\n    function dragEnd(d) {\n        if (!d3.event.active) {\n            simulation.alphaTarget(0);\n        }\n        d.fx = null;\n        d.fy = null;\n    }\n    return d3.drag()\n        .on(\"start\", dragStart)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragEnd);\n}"]},"metadata":{},"sourceType":"module"}