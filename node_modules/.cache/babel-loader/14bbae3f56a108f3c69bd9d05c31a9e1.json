{"ast":null,"code":"var _jsxFileName = \"/Users/Fwu/Documents/Acd.2019-2020/CS765/Design Challenge/DC3/Amazon-Categories-Network-React-App/src/Network.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport bootstrapSwitch from 'bootstrap-switch';\nimport \"./InfoBox.css\";\nimport \"./Network.css\";\nimport drawNet from \"./Helper\";\n\nclass Network extends Component {\n  render() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    d3.csv(\"./all-nodes.csv\").then(data => {\n      console.log(data);\n      let firstLayer = data.filter(obj => +obj[\"parent\"] === 0);\n      console.log(firstLayer);\n      let defaultNet = netData(firstLayer, \"root\");\n      console.log(defaultNet);\n      const defaultLinks = defaultNet.link.map(d => Object.create(d));\n      const defaultNodes = defaultNet.node.map(d => Object.create(d));\n      drawNet(defaultNodes, defaultLinks, firstLayer, data, \"root\");\n    });\n    return React.createElement(\"svg\", {\n      className: \"Net\",\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction netData(layer, rootName) {\n  let netSet = {\n    node: [],\n    link: []\n  };\n  layer.forEach(obj => {\n    netSet.node.push({\n      id: obj.name,\n      group: +obj[\"numChildren\"]\n    });\n\n    if (obj.name !== rootName) {\n      netSet.link.push({\n        source: rootName,\n        target: obj.name,\n        value: +obj[\"numChildren\"]\n      });\n    }\n  });\n  return netSet;\n}\n\nexport default Network;","map":{"version":3,"sources":["/Users/Fwu/Documents/Acd.2019-2020/CS765/Design Challenge/DC3/Amazon-Categories-Network-React-App/src/Network.js"],"names":["React","Component","d3","bootstrapSwitch","drawNet","Network","render","width","window","innerWidth","height","innerHeight","csv","then","data","console","log","firstLayer","filter","obj","defaultNet","netData","defaultLinks","link","map","d","Object","create","defaultNodes","node","layer","rootName","netSet","forEach","push","id","name","group","source","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AACA,OAAO,eAAP;AACA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,UAApB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC5BK,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAGC,MAAM,CAACC,UAArB;AACA,UAAMC,MAAM,GAAGF,MAAM,CAACG,WAAtB;AACAT,IAAAA,EAAE,CAACU,GAAH,CAAO,iBAAP,EAA0BC,IAA1B,CAA+BC,IAAI,IAAI;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAIG,UAAU,GAAGH,IAAI,CAACI,MAAL,CAAYC,GAAG,IAAI,CAACA,GAAG,CAAC,QAAD,CAAJ,KAAmB,CAAtC,CAAjB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACA,UAAIG,UAAU,GAAGC,OAAO,CAACJ,UAAD,EAAa,MAAb,CAAxB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ;AACA,YAAME,YAAY,GAAGF,UAAU,CAACG,IAAX,CAAgBC,GAAhB,CAAoBC,CAAC,IAAIC,MAAM,CAACC,MAAP,CAAcF,CAAd,CAAzB,CAArB;AACA,YAAMG,YAAY,GAAGR,UAAU,CAACS,IAAX,CAAgBL,GAAhB,CAAoBC,CAAC,IAAIC,MAAM,CAACC,MAAP,CAAcF,CAAd,CAAzB,CAArB;AACArB,MAAAA,OAAO,CAACwB,YAAD,EAAeN,YAAf,EAA6BL,UAA7B,EAAyCH,IAAzC,EAA+C,MAA/C,CAAP;AACH,KATD;AAUA,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAEP,KAA5B;AAAmC,MAAA,MAAM,EAAEG,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAjB2B;;AAmBhC,SAASW,OAAT,CAAiBS,KAAjB,EAAwBC,QAAxB,EAAkC;AAC9B,MAAIC,MAAM,GAAG;AACTH,IAAAA,IAAI,EAAC,EADI;AAETN,IAAAA,IAAI,EAAC;AAFI,GAAb;AAIAO,EAAAA,KAAK,CAACG,OAAN,CAAcd,GAAG,IAAI;AACjBa,IAAAA,MAAM,CAACH,IAAP,CAAYK,IAAZ,CAAiB;AAACC,MAAAA,EAAE,EAAEhB,GAAG,CAACiB,IAAT;AAAeC,MAAAA,KAAK,EAAE,CAAClB,GAAG,CAAC,aAAD;AAA1B,KAAjB;;AACA,QAAIA,GAAG,CAACiB,IAAJ,KAAaL,QAAjB,EAA2B;AACvBC,MAAAA,MAAM,CAACT,IAAP,CAAYW,IAAZ,CAAiB;AAACI,QAAAA,MAAM,EAAEP,QAAT;AAAmBQ,QAAAA,MAAM,EAAEpB,GAAG,CAACiB,IAA/B;AAAqCI,QAAAA,KAAK,EAAE,CAACrB,GAAG,CAAC,aAAD;AAAhD,OAAjB;AACH;AACJ,GALD;AAMA,SAAOa,MAAP;AACH;;AACD,eAAe3B,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport bootstrapSwitch from 'bootstrap-switch';\nimport \"./InfoBox.css\";\nimport \"./Network.css\";\nimport drawNet from \"./Helper\";\n\nclass Network extends Component {\n    render() {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        d3.csv(\"./all-nodes.csv\").then(data => {\n            console.log(data);\n            let firstLayer = data.filter(obj => +obj[\"parent\"] === 0);\n            console.log(firstLayer);\n            let defaultNet = netData(firstLayer, \"root\");\n            console.log(defaultNet);\n            const defaultLinks = defaultNet.link.map(d => Object.create(d));\n            const defaultNodes = defaultNet.node.map(d => Object.create(d));\n            drawNet(defaultNodes, defaultLinks, firstLayer, data, \"root\");\n        });\n        return (\n            <svg className=\"Net\" width={width} height={height}/>\n        )\n    }\n}\nfunction netData(layer, rootName) {\n    let netSet = {\n        node:[],\n        link:[]\n    };\n    layer.forEach(obj => {\n        netSet.node.push({id: obj.name, group: +obj[\"numChildren\"]});\n        if (obj.name !== rootName) {\n            netSet.link.push({source: rootName, target: obj.name, value: +obj[\"numChildren\"]})\n        }\n    });\n    return netSet;\n}\nexport default Network;"]},"metadata":{},"sourceType":"module"}