{"ast":null,"code":"var _jsxFileName = \"/Users/Fwu/Documents/Acd.2019-2020/CS765/Design Challenge/DC3/category-network/src/Network.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass Network extends Component {\n  render() {\n    const width = 1500;\n    const height = 800;\n\n    function color() {\n      const scale = d3.scaleOrdinal(d3.schemeCategory10);\n      return d => scale(d.group);\n    }\n\n    function clicking() {\n      return d3.select(this).on(\"click\");\n    }\n\n    function drag(simulation) {\n      function dragStart(d) {\n        if (!d3.event.active) {\n          simulation.alphaTarget(0.3).restart();\n        }\n\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n\n      function dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n      }\n\n      function dragEnd(d) {\n        if (!d3.event.active) {\n          simulation.alphaTarget(0);\n        }\n\n        d.fx = null;\n        d.fy = null;\n      }\n\n      return d3.drag().on(\"start\", dragStart).on(\"drag\", dragged).on(\"end\", dragEnd);\n    }\n\n    d3.csv(\"./all-nodes.csv\").then(data => {\n      console.log(data);\n      let firstLayer = data.filter(obj => +obj[\"parent\"] === 0);\n      console.log(firstLayer);\n      let defaultNet = {\n        node: [],\n        link: []\n      };\n      firstLayer.forEach(obj => {\n        defaultNet.node.push({\n          id: obj.name,\n          group: +obj.numChildren\n        });\n\n        if (obj.name !== \"root\") {\n          defaultNet.link.push({\n            source: \"root\",\n            target: obj.name,\n            value: +obj.numChildren\n          });\n        }\n      });\n      console.log(defaultNet);\n      const defaultLinks = defaultNet.link.map(d => Object.create(d));\n      const defaultNodes = defaultNet.node.map(d => Object.create(d));\n      const simulation = d3.forceSimulation(defaultNodes).force(\"link\", d3.forceLink(defaultLinks).id(d => d.id)).force(\"link\", d3.forceLink(defaultLinks).distance(d => d.value * 1.5)).force(\"charge\", d3.forceManyBody()).force(\"center\", d3.forceCenter(width / 2, height / 2));\n      const svg = d3.select(\"svg\").attr(\"viewBox\", [0, 0, width, height]);\n      const link = svg.append(\"g\").attr(\"stroke\", \"#999\").attr(\"stroke-opacity\", 0.6).selectAll(\"line\").data(defaultLinks).join(\"line\").attr(\"stroke-width\", 1.5);\n      const node = svg.append(\"g\").attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 1.5).selectAll(\"circle\").data(defaultNodes).join(\"circle\").attr(\"r\", d => Math.sqrt(d.group) * 1.5).attr(\"fill\", color).call(clicking).call(drag(simulation));\n      node.append(\"title\").text(d => d.id);\n      simulation.on(\"tick\", () => {\n        link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n        node.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n      });\n    });\n    return React.createElement(\"svg\", {\n      className: \"Net\",\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Network;","map":{"version":3,"sources":["/Users/Fwu/Documents/Acd.2019-2020/CS765/Design Challenge/DC3/category-network/src/Network.js"],"names":["React","Component","d3","Network","render","width","height","color","scale","scaleOrdinal","schemeCategory10","d","group","clicking","select","on","drag","simulation","dragStart","event","active","alphaTarget","restart","fx","x","fy","y","dragged","dragEnd","csv","then","data","console","log","firstLayer","filter","obj","defaultNet","node","link","forEach","push","id","name","numChildren","source","target","value","defaultLinks","map","Object","create","defaultNodes","forceSimulation","force","forceLink","distance","forceManyBody","forceCenter","svg","attr","append","selectAll","join","Math","sqrt","call","text"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as d3 from \"d3\";\n\nclass Network extends Component {\n    render() {\n        const width = 1500;\n        const height = 800;\n        function color() {\n            const scale = d3.scaleOrdinal(d3.schemeCategory10);\n            return d => scale(d.group);\n        }\n        function clicking() {\n            return d3.select(this)\n                .on(\"click\", )\n        }\n        function drag(simulation) {\n            function dragStart(d) {\n                if (!d3.event.active) {\n                    simulation.alphaTarget(0.3).restart();\n                }\n                d.fx = d.x;\n                d.fy = d.y;\n            }\n            function dragged(d) {\n                d.fx = d3.event.x;\n                d.fy = d3.event.y;\n            }\n            function dragEnd(d) {\n                if (!d3.event.active) {\n                    simulation.alphaTarget(0);\n                }\n                d.fx = null;\n                d.fy = null;\n            }\n            return d3.drag()\n                .on(\"start\", dragStart)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragEnd);\n        }\n        d3.csv(\"./all-nodes.csv\").then(data => {\n            console.log(data);\n            let firstLayer = data.filter(obj => +obj[\"parent\"] === 0);\n            console.log(firstLayer);\n            let defaultNet = {\n                node:[],\n                link:[]\n            };\n            firstLayer.forEach(obj => {\n                defaultNet.node.push({id: obj.name, group: +obj.numChildren});\n                if (obj.name !== \"root\") {\n                    defaultNet.link.push({source: \"root\", target: obj.name, value: +obj.numChildren});\n                }\n            });\n            console.log(defaultNet);\n            const defaultLinks = defaultNet.link.map(d => Object.create(d));\n            const defaultNodes = defaultNet.node.map(d => Object.create(d));\n            const simulation = d3.forceSimulation(defaultNodes)\n                .force(\"link\", d3.forceLink(defaultLinks).id(d => d.id))\n                .force(\"link\", d3.forceLink(defaultLinks).distance(d => d.value * 1.5))\n                .force(\"charge\", d3.forceManyBody())\n                .force(\"center\", d3.forceCenter(width / 2, height / 2));\n            const svg = d3.select(\"svg\")\n                .attr(\"viewBox\", [0, 0, width, height]);\n            const link = svg.append(\"g\")\n                .attr(\"stroke\", \"#999\")\n                .attr(\"stroke-opacity\", 0.6)\n                .selectAll(\"line\")\n                .data(defaultLinks)\n                .join(\"line\")\n                .attr(\"stroke-width\", 1.5);\n            const node = svg.append(\"g\")\n                .attr(\"stroke\", \"#fff\")\n                .attr(\"stroke-width\", 1.5)\n                .selectAll(\"circle\")\n                .data(defaultNodes)\n                .join(\"circle\")\n                .attr(\"r\", d => Math.sqrt(d.group) * 1.5)\n                .attr(\"fill\", color)\n                .call(clicking)\n                .call(drag(simulation));\n            node.append(\"title\")\n                .text(d => d.id);\n            simulation.on(\"tick\", () => {\n                link\n                    .attr(\"x1\", d => d.source.x)\n                    .attr(\"y1\", d => d.source.y)\n                    .attr(\"x2\", d => d.target.x)\n                    .attr(\"y2\", d => d.target.y);\n                node\n                    .attr(\"cx\", d => d.x)\n                    .attr(\"cy\", d => d.y);\n            });\n        });\n        return (\n            <svg className=\"Net\" width={width} height={height}/>\n        )\n    }\n}\nexport default Network;"]},"metadata":{},"sourceType":"module"}