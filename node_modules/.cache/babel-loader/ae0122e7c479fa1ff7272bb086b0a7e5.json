{"ast":null,"code":"import _classCallCheck from\"/Users/Fwu/Documents/Acd.2019-2020/CS765/Design Challenge/DC3/category-network/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Fwu/Documents/Acd.2019-2020/CS765/Design Challenge/DC3/category-network/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Fwu/Documents/Acd.2019-2020/CS765/Design Challenge/DC3/category-network/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Fwu/Documents/Acd.2019-2020/CS765/Design Challenge/DC3/category-network/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/Fwu/Documents/Acd.2019-2020/CS765/Design Challenge/DC3/category-network/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import*as d3 from\"d3\";import $ from'jquery';import\"./InfoBox.css\";import\"./Network.css\";var Network=/*#__PURE__*/function(_Component){_inherits(Network,_Component);function Network(){_classCallCheck(this,Network);return _possibleConstructorReturn(this,_getPrototypeOf(Network).apply(this,arguments));}_createClass(Network,[{key:\"render\",value:function render(){var width=1500;var height=800;function info(clicked,data){if(clicked){$(\"#root\").append(\"<div class='infoBox'>\"+\"<h2>Category Information</h2>\"+\"<text>Category Name: \"+data.name+\"</text>\"+\"<text>Category id: \"+data.id+\"</text>\"+\"<text>Number of Products: \"+data.productCount+\"</text>\"+\"<text>Number of Subtrees: \"+data.numChildren+\"</text>\"+\"<text>Number of Products in Subtree: \"+data.subtreeProductCount+\"</text>\"+\"</div>\");}else{$(\".infoBox\").remove();}}function color(){var scale=d3.scaleOrdinal(d3.schemeCategory10);return function(d){return scale(d.group);};}function drag(simulation){function dragStart(d){if(!d3.event.active){simulation.alphaTarget(0.3).restart();}d.fx=d.x;d.fy=d.y;}function dragged(d){d.fx=d3.event.x;d.fy=d3.event.y;}function dragEnd(d){if(!d3.event.active){simulation.alphaTarget(0);}d.fx=null;d.fy=null;}return d3.drag().on(\"start\",dragStart).on(\"drag\",dragged).on(\"end\",dragEnd);}function draw(nodeSet,linkSet,currLayer,data){var simulation=d3.forceSimulation(nodeSet).force(\"link\",d3.forceLink(linkSet).id(function(d){return d.id;})).force(\"link\",d3.forceLink(linkSet).distance(function(d){return d.value*1.5;})).force(\"charge\",d3.forceManyBody()).force(\"center\",d3.forceCenter(width/2,height/2));var svg=d3.select(\"svg\").attr(\"viewBox\",[0,0,width,height]);var link=svg.append(\"g\").classed(\"links\",true).attr(\"stroke\",\"#999\").attr(\"stroke-opacity\",0.6).selectAll(\"line\").data(linkSet).join(\"line\").attr(\"stroke-width\",1.5);var node=svg.append(\"g\").classed(\"nodes\",true).attr(\"stroke\",\"#fff\").attr(\"stroke-width\",1.5).selectAll(\"circle\").data(nodeSet).join(\"circle\").attr(\"r\",function(d){return Math.sqrt(d.group)*1.5;}).attr(\"fill\",\"#2E86C1\").on(\"click\",function(){var _this=this;$(\".infoBox\").remove();d3.select(this).classed(\"clicked\",!d3.select(this).classed(\"clicked\"));var clickedData=currLayer.filter(function(obj){return obj.name===d3.select(_this).select(\"title\").text();});info(d3.select(this).classed(\"clicked\"),clickedData[0]);var layer=data.filter(function(obj){return obj[\"parent\"]===clickedData[0][\"id\"]||obj[\"name\"]===clickedData[0][\"name\"];});console.log(layer);var subTreeSet=netData(layer,clickedData[0][\"name\"]);console.log(subTreeSet);var nodeSet=subTreeSet.node.map(function(d){return Object.create(d);}),linkSet=subTreeSet.link.map(function(d){return Object.create(d);});$(\".links\").remove();$(\".nodes\").remove();console.log(\"removed, ready to draw\");draw(nodeSet,linkSet,layer,data);}).call(drag(simulation));node.append(\"title\").text(function(d){return d.id;});simulation.on(\"tick\",function(){link.attr(\"x1\",function(d){return d.source.x;}).attr(\"y1\",function(d){return d.source.y;}).attr(\"x2\",function(d){return d.target.x;}).attr(\"y2\",function(d){return d.target.y;});node.attr(\"cx\",function(d){return d.x;}).attr(\"cy\",function(d){return d.y;});});}function netData(layer,rootName){var netSet={node:[],link:[]};layer.forEach(function(obj){netSet.node.push({id:obj.name,group:+obj[\"numChildren\"]});if(obj.name!==rootName){netSet.link.push({source:rootName,target:obj.name,value:+obj[\"numChildren\"]});}});return netSet;}d3.csv(\"./all-nodes.csv\").then(function(data){console.log(data);var firstLayer=data.filter(function(obj){return+obj[\"parent\"]===0;});console.log(firstLayer);// let defaultNet = {\n//     node:[],\n//     link:[]\n// };\n// firstLayer.forEach(obj => {\n//     defaultNet.node.push({id: obj.name, group: +obj.numChildren});\n//     if (obj.name !== \"root\") {\n//         defaultNet.link.push({source: \"root\", target: obj.name, value: +obj.numChildren});\n//     }\n// });\nvar defaultNet=netData(firstLayer,\"root\");console.log(defaultNet);var defaultLinks=defaultNet.link.map(function(d){return Object.create(d);});var defaultNodes=defaultNet.node.map(function(d){return Object.create(d);});draw(defaultNodes,defaultLinks,firstLayer,data);// const simulation = d3.forceSimulation(defaultNodes)\n//     .force(\"link\", d3.forceLink(defaultLinks).id(d => d.id))\n//     .force(\"link\", d3.forceLink(defaultLinks).distance(d => d.value * 1.5))\n//     .force(\"charge\", d3.forceManyBody())\n//     .force(\"center\", d3.forceCenter(width / 2, height / 2));\n// const svg = d3.select(\"svg\")\n//     .attr(\"viewBox\", [0, 0, width, height]);\n// const link = svg.append(\"g\")\n//     .classed(\"links\", true)\n//     .attr(\"stroke\", \"#999\")\n//     .attr(\"stroke-opacity\", 0.6)\n//     .selectAll(\"line\")\n//     .data(defaultLinks)\n//     .join(\"line\")\n//     .attr(\"stroke-width\", 1.5);\n// const node = svg.append(\"g\")\n//     .classed(\"nodes\", true)\n//     .attr(\"stroke\", \"#fff\")\n//     .attr(\"stroke-width\", 1.5)\n//     .selectAll(\"circle\")\n//     .data(defaultNodes)\n//     .join(\"circle\")\n//     .attr(\"r\", d => Math.sqrt(d.group) * 1.5)\n//     .attr(\"fill\", \"#2E86C1\")\n//     .on(\"click\", function() {\n//         $(\".infoBox\").remove();\n//         d3.select(this)\n//             .classed(\"clicked\", !d3.select(this).classed(\"clicked\"));\n//         let clickedData = firstLayer.filter(obj => obj.name === d3.select(this).select(\"title\").text());\n//         info(d3.select(this).classed(\"clicked\"), clickedData[0]);\n//         console.log(clickedData[0]);\n//\n//         let layer = data.filter(obj => obj[\"parent\"] === clickedData[0][\"id\"] || obj[\"name\"] === clickedData[0][\"name\"]);\n//         console.log(layer);\n//         let subTreeSet = netData(layer, clickedData[0][\"name\"]);\n//         console.log(subTreeSet);\n//         let nodeSet = subTreeSet.node.map(d => Object.create(d)),\n//             linkSet = subTreeSet.link.map(d => Object.create(d));\n//         $(\".links\").remove();\n//         $(\".nodes\").remove();\n//         console.log(\"removed, ready to draw\");\n//         draw(nodeSet, linkSet, layer, data);\n//     })\n//     .call(drag(simulation));\n// node.append(\"title\")\n//     .text(d => d.id);\n// simulation.on(\"tick\", () => {\n//     link\n//         .attr(\"x1\", d => d.source.x)\n//         .attr(\"y1\", d => d.source.y)\n//         .attr(\"x2\", d => d.target.x)\n//         .attr(\"y2\", d => d.target.y);\n//     node\n//         .attr(\"cx\", d => d.x)\n//         .attr(\"cy\", d => d.y);\n// });\n});return React.createElement(\"svg\",{className:\"Net\",width:width,height:height});}}]);return Network;}(Component);export default Network;","map":{"version":3,"sources":["/Users/Fwu/Documents/Acd.2019-2020/CS765/Design Challenge/DC3/category-network/src/Network.js"],"names":["React","Component","d3","$","Network","width","height","info","clicked","data","append","name","id","productCount","numChildren","subtreeProductCount","remove","color","scale","scaleOrdinal","schemeCategory10","d","group","drag","simulation","dragStart","event","active","alphaTarget","restart","fx","x","fy","y","dragged","dragEnd","on","draw","nodeSet","linkSet","currLayer","forceSimulation","force","forceLink","distance","value","forceManyBody","forceCenter","svg","select","attr","link","classed","selectAll","join","node","Math","sqrt","clickedData","filter","obj","text","layer","console","log","subTreeSet","netData","map","Object","create","call","source","target","rootName","netSet","forEach","push","csv","then","firstLayer","defaultNet","defaultLinks","defaultNodes"],"mappings":"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M,CAACC,MAAP,CAAchD,CAAd,CAAJ,EAArB,CAArB,CACA,GAAM6D,CAAAA,YAAY,CAAGF,UAAU,CAACzB,IAAX,CAAgBY,GAAhB,CAAoB,SAAA9C,CAAC,QAAI+C,CAAAA,MAAM,CAACC,MAAP,CAAchD,CAAd,CAAJ,EAArB,CAArB,CACAgB,IAAI,CAAC6C,YAAD,CAAeD,YAAf,CAA6BF,UAA7B,CAAyCtE,IAAzC,CAAJ,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA3ED,EA4EA,MACI,4BAAK,SAAS,CAAC,KAAf,CAAqB,KAAK,CAAEJ,KAA5B,CAAmC,MAAM,CAAEC,MAA3C,EADJ,CAGH,C,qBAnMiBL,S,EAqMtB,cAAeG,CAAAA,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport $ from 'jquery';\nimport \"./InfoBox.css\";\nimport \"./Network.css\";\n\nclass Network extends Component {\n    render() {\n        const width = 1500;\n        const height = 800;\n        function info(clicked, data) {\n            if (clicked) {\n                $(\"#root\").append(\n                    \"<div class='infoBox'>\" +\n                        \"<h2>Category Information</h2>\" +\n                        \"<text>Category Name: \" + data.name + \"</text>\" +\n                        \"<text>Category id: \" + data.id + \"</text>\" +\n                        \"<text>Number of Products: \" + data.productCount + \"</text>\" +\n                        \"<text>Number of Subtrees: \" + data.numChildren + \"</text>\" +\n                        \"<text>Number of Products in Subtree: \" + data.subtreeProductCount + \"</text>\" +\n                    \"</div>\");\n            } else {\n                $(\".infoBox\").remove();\n            }\n        }\n        function color() {\n            const scale = d3.scaleOrdinal(d3.schemeCategory10);\n            return d => scale(d.group);\n        }\n        function drag(simulation) {\n            function dragStart(d) {\n                if (!d3.event.active) {\n                    simulation.alphaTarget(0.3).restart();\n                }\n                d.fx = d.x;\n                d.fy = d.y;\n            }\n            function dragged(d) {\n                d.fx = d3.event.x;\n                d.fy = d3.event.y;\n            }\n            function dragEnd(d) {\n                if (!d3.event.active) {\n                    simulation.alphaTarget(0);\n                }\n                d.fx = null;\n                d.fy = null;\n            }\n            return d3.drag()\n                .on(\"start\", dragStart)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragEnd);\n        }\n        function draw(nodeSet, linkSet, currLayer, data) {\n            let simulation = d3.forceSimulation(nodeSet)\n                .force(\"link\", d3.forceLink(linkSet).id(d => d.id))\n                .force(\"link\", d3.forceLink(linkSet).distance(d => d.value * 1.5))\n                .force(\"charge\", d3.forceManyBody())\n                .force(\"center\", d3.forceCenter(width / 2, height / 2));\n            let svg = d3.select(\"svg\")\n                .attr(\"viewBox\", [0, 0, width, height]);\n            let link = svg.append(\"g\")\n                .classed(\"links\", true)\n                .attr(\"stroke\", \"#999\")\n                .attr(\"stroke-opacity\", 0.6)\n                .selectAll(\"line\")\n                .data(linkSet)\n                .join(\"line\")\n                .attr(\"stroke-width\", 1.5);\n            let node = svg.append(\"g\")\n                .classed(\"nodes\", true)\n                .attr(\"stroke\", \"#fff\")\n                .attr(\"stroke-width\", 1.5)\n                .selectAll(\"circle\")\n                .data(nodeSet)\n                .join(\"circle\")\n                .attr(\"r\", d => Math.sqrt(d.group) * 1.5)\n                .attr(\"fill\", \"#2E86C1\")\n                .on(\"click\", function() {\n                    $(\".infoBox\").remove();\n                    d3.select(this)\n                        .classed(\"clicked\", !d3.select(this).classed(\"clicked\"));\n                    let clickedData = currLayer.filter(obj => obj.name === d3.select(this).select(\"title\").text());\n                    info(d3.select(this).classed(\"clicked\"), clickedData[0]);\n                    let layer = data.filter(obj => obj[\"parent\"] === clickedData[0][\"id\"] || obj[\"name\"] === clickedData[0][\"name\"]);\n                    console.log(layer);\n                    let subTreeSet = netData(layer, clickedData[0][\"name\"]);\n                    console.log(subTreeSet);\n                    let nodeSet = subTreeSet.node.map(d => Object.create(d)),\n                        linkSet = subTreeSet.link.map(d => Object.create(d));\n                    $(\".links\").remove();\n                    $(\".nodes\").remove();\n                    console.log(\"removed, ready to draw\");\n                    draw(nodeSet, linkSet, layer, data);\n                })\n                .call(drag(simulation));\n            node.append(\"title\")\n                .text(d => d.id);\n            simulation.on(\"tick\", () => {\n                link\n                    .attr(\"x1\", d => d.source.x)\n                    .attr(\"y1\", d => d.source.y)\n                    .attr(\"x2\", d => d.target.x)\n                    .attr(\"y2\", d => d.target.y);\n                node\n                    .attr(\"cx\", d => d.x)\n                    .attr(\"cy\", d => d.y);\n            });\n        }\n        function netData(layer, rootName) {\n            let netSet = {\n                node:[],\n                link:[]\n            };\n            layer.forEach(obj => {\n                netSet.node.push({id: obj.name, group: +obj[\"numChildren\"]});\n                if (obj.name !== rootName) {\n                    netSet.link.push({source: rootName, target: obj.name, value: +obj[\"numChildren\"]})\n                }\n            });\n            return netSet;\n        }\n        d3.csv(\"./all-nodes.csv\").then(data => {\n            console.log(data);\n            let firstLayer = data.filter(obj => +obj[\"parent\"] === 0);\n            console.log(firstLayer);\n            // let defaultNet = {\n            //     node:[],\n            //     link:[]\n            // };\n            // firstLayer.forEach(obj => {\n            //     defaultNet.node.push({id: obj.name, group: +obj.numChildren});\n            //     if (obj.name !== \"root\") {\n            //         defaultNet.link.push({source: \"root\", target: obj.name, value: +obj.numChildren});\n            //     }\n            // });\n            let defaultNet = netData(firstLayer, \"root\");\n            console.log(defaultNet);\n            const defaultLinks = defaultNet.link.map(d => Object.create(d));\n            const defaultNodes = defaultNet.node.map(d => Object.create(d));\n            draw(defaultNodes, defaultLinks, firstLayer, data);\n            // const simulation = d3.forceSimulation(defaultNodes)\n            //     .force(\"link\", d3.forceLink(defaultLinks).id(d => d.id))\n            //     .force(\"link\", d3.forceLink(defaultLinks).distance(d => d.value * 1.5))\n            //     .force(\"charge\", d3.forceManyBody())\n            //     .force(\"center\", d3.forceCenter(width / 2, height / 2));\n            // const svg = d3.select(\"svg\")\n            //     .attr(\"viewBox\", [0, 0, width, height]);\n            // const link = svg.append(\"g\")\n            //     .classed(\"links\", true)\n            //     .attr(\"stroke\", \"#999\")\n            //     .attr(\"stroke-opacity\", 0.6)\n            //     .selectAll(\"line\")\n            //     .data(defaultLinks)\n            //     .join(\"line\")\n            //     .attr(\"stroke-width\", 1.5);\n            // const node = svg.append(\"g\")\n            //     .classed(\"nodes\", true)\n            //     .attr(\"stroke\", \"#fff\")\n            //     .attr(\"stroke-width\", 1.5)\n            //     .selectAll(\"circle\")\n            //     .data(defaultNodes)\n            //     .join(\"circle\")\n            //     .attr(\"r\", d => Math.sqrt(d.group) * 1.5)\n            //     .attr(\"fill\", \"#2E86C1\")\n            //     .on(\"click\", function() {\n            //         $(\".infoBox\").remove();\n            //         d3.select(this)\n            //             .classed(\"clicked\", !d3.select(this).classed(\"clicked\"));\n            //         let clickedData = firstLayer.filter(obj => obj.name === d3.select(this).select(\"title\").text());\n            //         info(d3.select(this).classed(\"clicked\"), clickedData[0]);\n            //         console.log(clickedData[0]);\n            //\n            //         let layer = data.filter(obj => obj[\"parent\"] === clickedData[0][\"id\"] || obj[\"name\"] === clickedData[0][\"name\"]);\n            //         console.log(layer);\n            //         let subTreeSet = netData(layer, clickedData[0][\"name\"]);\n            //         console.log(subTreeSet);\n            //         let nodeSet = subTreeSet.node.map(d => Object.create(d)),\n            //             linkSet = subTreeSet.link.map(d => Object.create(d));\n            //         $(\".links\").remove();\n            //         $(\".nodes\").remove();\n            //         console.log(\"removed, ready to draw\");\n            //         draw(nodeSet, linkSet, layer, data);\n            //     })\n            //     .call(drag(simulation));\n            // node.append(\"title\")\n            //     .text(d => d.id);\n            // simulation.on(\"tick\", () => {\n            //     link\n            //         .attr(\"x1\", d => d.source.x)\n            //         .attr(\"y1\", d => d.source.y)\n            //         .attr(\"x2\", d => d.target.x)\n            //         .attr(\"y2\", d => d.target.y);\n            //     node\n            //         .attr(\"cx\", d => d.x)\n            //         .attr(\"cy\", d => d.y);\n            // });\n        });\n        return (\n            <svg className=\"Net\" width={width} height={height}/>\n        )\n    }\n}\nexport default Network;"]},"metadata":{},"sourceType":"module"}