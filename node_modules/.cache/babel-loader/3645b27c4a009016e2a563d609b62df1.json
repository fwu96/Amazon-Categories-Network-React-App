{"ast":null,"code":"import $ from \"jquery\";\nimport * as d3 from \"d3\";\nexport function info(clicked, data) {\n  if (clicked) {\n    $(\"#root\").append(\"<div class='infoBox'>\" + \"<h2>Category Information</h2>\" + \"<text>Category Name: \" + data.name + \"</text>\" + \"<text>Category id: \" + data.id + \"</text>\" + \"<text>Number of Products: \" + data.productCount + \"</text>\" + \"<text>Number of Subtrees: \" + data.numChildren + \"</text>\" + \"<text>Number of Products in Subtree: \" + data.subtreeProductCount + \"</text>\" + \"</div>\");\n  } else {\n    $(\".infoBox\").remove();\n  }\n}\nexport function restart() {\n  $(\".links\").remove();\n  $(\".nodes\").remove();\n  $(\".radial\").remove();\n  $(\".bar\").remove();\n}\nexport function resetCatList() {\n  // $(\".categories option\").each(function() {\n  //     if ($(this).val() !== \"default\") {\n  //         $(this).remove();\n  //     }\n  // });\n  $(\".opts\").empty();\n}\nexport function updateCatList(obj) {\n  $(\".categories\").append(\"<option value=\\\"\".concat(obj.name, \" class=opts\\\">\").concat(obj.name, \"</option>\"));\n}\nexport function mouseover() {\n  d3.select(this).transition().duration(700).attr(\"fill\", \"#AF7AC5\");\n}\nexport function mouseout() {\n  d3.select(this).transition().duration(700).attr(\"fill\", \"#2E86C1\");\n}\nexport function drag(simulation) {\n  function dragStart(d) {\n    if (!d3.event.active) {\n      simulation.alphaTarget(0.3).restart();\n    }\n\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n\n  function dragged(d) {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  }\n\n  function dragEnd(d) {\n    if (!d3.event.active) {\n      simulation.alphaTarget(0);\n    }\n\n    d.fx = null;\n    d.fy = null;\n  }\n\n  return d3.drag().on(\"start\", dragStart).on(\"drag\", dragged).on(\"end\", dragEnd);\n}","map":{"version":3,"sources":["/Users/Fwu/Documents/Acd.2019-2020/CS765/Design Challenge/DC3/Amazon-Categories-Network-React-App/src/Interaction.js"],"names":["$","d3","info","clicked","data","append","name","id","productCount","numChildren","subtreeProductCount","remove","restart","resetCatList","empty","updateCatList","obj","mouseover","select","transition","duration","attr","mouseout","drag","simulation","dragStart","d","event","active","alphaTarget","fx","x","fy","y","dragged","dragEnd","on"],"mappings":"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","sourcesContent":["import $ from \"jquery\";\nimport * as d3 from \"d3\";\n\nexport function info(clicked, data) {\n    if (clicked) {\n        $(\"#root\").append(\n            \"<div class='infoBox'>\" +\n            \"<h2>Category Information</h2>\" +\n            \"<text>Category Name: \" + data.name + \"</text>\" +\n            \"<text>Category id: \" + data.id + \"</text>\" +\n            \"<text>Number of Products: \" + data.productCount + \"</text>\" +\n            \"<text>Number of Subtrees: \" + data.numChildren + \"</text>\" +\n            \"<text>Number of Products in Subtree: \" + data.subtreeProductCount + \"</text>\" +\n            \"</div>\");\n    } else {\n        $(\".infoBox\").remove();\n    }\n}\nexport function restart() {\n    $(\".links\").remove();\n    $(\".nodes\").remove();\n    $(\".radial\").remove();\n    $(\".bar\").remove();\n}\nexport function resetCatList() {\n    // $(\".categories option\").each(function() {\n    //     if ($(this).val() !== \"default\") {\n    //         $(this).remove();\n    //     }\n    // });\n    $(\".opts\").empty();\n}\nexport function updateCatList(obj) {\n    $(\".categories\").append(\n        `<option value=\"${obj.name} class=opts\">${obj.name}</option>`\n    );\n}\nexport function mouseover() {\n    d3.select(this)\n        .transition()\n        .duration(700)\n        .attr(\"fill\", \"#AF7AC5\");\n}\nexport function mouseout() {\n    d3.select(this)\n        .transition()\n        .duration(700)\n        .attr(\"fill\", \"#2E86C1\");\n}\nexport function drag(simulation) {\n    function dragStart(d) {\n        if (!d3.event.active) {\n            simulation.alphaTarget(0.3).restart();\n        }\n        d.fx = d.x;\n        d.fy = d.y;\n    }\n    function dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n    }\n    function dragEnd(d) {\n        if (!d3.event.active) {\n            simulation.alphaTarget(0);\n        }\n        d.fx = null;\n        d.fy = null;\n    }\n    return d3.drag()\n        .on(\"start\", dragStart)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragEnd);\n}"]},"metadata":{},"sourceType":"module"}